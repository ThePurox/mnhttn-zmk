#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "keys_de.h"

#define BASE 0
#define APT 0
#define WMAN 1
#define SYM  2
#define NAV  3
#define NUM  4
#define ADJ  5

/ {
  macros {
  macro_sch:
    macro_sch {
      label = "Macro_sch";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap &kp S &macro_release &kp RSHIFT &macro_tap &kp C &kp H>;
    };
  };
};

/ {
    combos {
        compatible = "zmk,combos";
/* usually on base layer */
        combo_q {
            timeout-ms = <40>;
            key-positions = <2 3>;
            bindings = <&kp Q>;
            layers = <APT>;
        };
        combo_z {
            timeout-ms = <40>;
            key-positions = <21 22>;
            bindings = <&kp DE_Z>;
            layers = <APT>;
        };
        combo_v {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&kp V>;
            layers = <APT>;
        };
        combo_b {
            timeout-ms = <40>;
            key-positions = <12 3>;
            bindings = <&kp B>;
            layers = <APT>;
        };
        combo_k {
            timeout-ms = <40>;
            key-positions = <12 13>;
            bindings = <&kp K>;
            layers = <APT>;
        };
        combo_x {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&kp X>;
            layers = <APT>;
        };
        combo_j {
            timeout-ms = <40>;
            key-positions = <6 17>;
            bindings = <&kp J>;
            layers = <APT>;
        };
        combo_sch {
            timeout-ms = <40>;
            key-positions = <11 13>;
            bindings = <&macro_sch>;
            layers = <APT>;
        };
        combo_esc {
            timeout-ms = <40>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
        };
/* parentheticals */
        combo_lbrc {
            timeout-ms = <40>;
            key-positions = <0 9>;
            bindings = <&kp DE_LBRC>;
        };
        combo_lbkt {
            timeout-ms = <40>;
            key-positions = <1 10>;
            bindings = <&kp DE_LBKT>;
        };
        combo_lpar {
            timeout-ms = <40>;
            key-positions = <2 11>;
            bindings = <&kp DE_LPAR>;
        };
        combo_lt {
            timeout-ms = <40>;
            key-positions = <3 12>;
            bindings = <&kp DE_LT>;
        };
        combo_gt {
            timeout-ms = <40>;
            key-positions = <4 13>;
            bindings = <&kp DE_GT>;
        };
        combo_rpar {
            timeout-ms = <40>;
            key-positions = <5 14>;
            bindings = <&kp DE_RPAR>;
        };
        combo_rbkt {
            timeout-ms = <40>;
            key-positions = <6 15>;
            bindings = <&kp DE_RBKT>;
        };
        combo_rbrc {
            timeout-ms = <40>;
            key-positions = <7 16>;
            bindings = <&kp DE_RBRC>;
        };
/* caps */
        combo_caps-word {
            timeout-ms = <40>;
            key-positions = <13 16>;
            bindings = <&caps_word>;
        };
        combo_capslock {
            timeout-ms = <40>;
            key-positions = <0 7>;
            bindings = <&kp CAPSLOCK>;
        };
/* deletion */
        combo_bspc {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
        };
        combo_del {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };
        combo_delword {
            timeout-ms = <40>;
            key-positions = <6 8>;
            bindings = <&kp LC(BSPC)>;
        };
    };
};


/ {
    chosen {
      zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            tapping-term-ms = <170>;
        };
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            tapping-term-ms = <170>;
        };

        hl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods left";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = < 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
        };
        hr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods right";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 30 31 32>;
        };
        my_lt: my_layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "my layer taps";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&mo &kp>, <&kp>;
            // non-thumb keys
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        base_layer {
            label= "BASE";
            bindings = <
                &kp V          &kp W          &kp F          &kp P          &kp K          &kp J          &kp L          &kp DE_Y       &kp U          &kp DE_Z
                &hl LCTRL R    &hl LALT S     &hl LGUI T     &hl LSHFT H    &hl RALT B     &hr RALT X     &hr RSHFT N    &hr RGUI A     &hr LALT I     &hr RCTRL O
                &kp Q          &kp C          &kp G          &kp D          &kp K          &kp DE_Z       &kp M          &kp DE_COMMA   &kp DE_DOT     &kp E
                                              &my_lt NUM ESC &my_lt NAV SPACE &kp E &kp E &my_lt SYM E  &my_lt ADJ ENTER
            >;
        };

        workman_layer {
            label= "WNAM";
            bindings = <
                &ht ESC DE_Q    &kp DE_D        &kp DE_R        &kp DE_W        &kp DE_B              &kp DE_J        &kp DE_F        &kp DE_U        &kp DE_P        &kp DE_COLON
                &mt LALT DE_A   &mt LCTRL DE_S  &mt LGUI DE_H   &mt LSHFT DE_T  &kp DE_G              &kp DE_Y        &mt RSHFT DE_N  &mt RGUI DE_E   &mt RCTRL DE_O  &mt RALT DE_I
                &kp DE_Z        &kp DE_X        &kp DE_M        &kp DE_C        &kp DE_V              &kp DE_K        &kp DE_L        &kp DE_COMMA    &kp DE_DOT      &kp DE_MINUS
                                                &trans          &lt SYM SPACE   &lt NUM BSPC          &lt NAV TAB     &mt LSHFT RET   &trans
            >;
        };

        sim_layer {
            label= "SYM";
            bindings = <
                &kp DE_EXCL     &kp DE_AT       &kp DE_LBRC     &kp DE_RBRC     &kp DE_GRAVE          &kp DE_SQT      &kp DE_U_UMLAUT &kp DE_CARET    &kp DE_O_UMLAUT &kp DE_STAR
                &kp DE_A_UMLAUT &kp DE_SZ       &kp DE_LPAR     &kp DE_RPAR     &kp DE_PLUS           &kp DE_DQT      &kp DE_EQUAL    &kp DE_DLLR     &kp DE_POUND    &kp DE_SEMI
                &kp DE_PIPE     &kp DE_PRCNT    &kp DE_LBKT     &kp DE_RBKT     &kp DE_TILDE          &kp DE_AMPS     &kp DE_LT       &kp DE_GT       &kp DE_QMARK    &kp DE_UNDER
                                                &trans          &trans          &trans                &kp DE_SLASH    &kp RSHFT       &trans
            >;
        };

        nav_layer {
            label= "NAV";
	          bindings = <
                &kp ESC         &trans          &trans          &trans          &trans                &kp DEL         &kp PG_UP       &kp UP          &kp PG_DN       &kp INS
                &kp LALT        &kp LCTRL       &kp LGUI        &kp LSHFT       &trans                &kp HOME        &kp LEFT        &kp DOWN        &kp RIGHT       &kp END
                &trans          &trans          &trans          &trans          &trans                &trans          &trans          &trans          &trans          &trans
                                                &trans          &kp BSPC        &kp DEL               &trans          &trans          &sl ADJ
            >;
        };

        num_layer {
            label= "NUM";
	          bindings = <
                &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                &kp F6          &kp F7          &kp F8          &kp F9          &kp F10
                &mt LALT N1     &mt LCTRL N2    &mt LGUI N3     &mt LSHFT N4    &kp N5                &kp N6          &mt RSHFT N7    &mt RGUI N8     &mt RCTRL N9    &mt RALT N0
                &trans          &trans          &trans          &kp DE_COLON    &kp DE_DOT            &trans          &trans          &trans          &trans          &trans
                                                &sl ADJ         &trans          &trans                &kp DE_BSLH     &trans          &trans
            >;
        };

        adjust_layer {
            label= "ADJ";
	          bindings = <
                &sys_reset      &bt BT_CLR_ALL  &out OUT_TOG    &trans          &tog WMAN             &tog WMAN       &trans          &out OUT_TOG    &bt BT_CLR_ALL  &sys_reset
                &bootloader     &bt BT_NXT      &trans          &trans          &trans                &trans          &trans          &trans          &bt BT_NXT      &bootloader
                &trans          &bt BT_PRV      &trans          &trans          &trans                &trans          &trans          &trans          &bt BT_PRV      &trans
                                                &trans          &trans          &trans                &trans          &trans          &trans
            >;
        };
    };
};
